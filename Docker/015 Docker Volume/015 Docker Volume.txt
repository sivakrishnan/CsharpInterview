Step 1: Create Docker Volumes Using CLI


Create a Named Volume
To create a named Docker volume using the CLI:

# Create a named Docker volume
docker volume create my-volume1

# List Docker volumes
docker volume ls

# Inspect the Docker volume
docker volume inspect my-volume1

-------------------------------------------------------------------------------------------------------

Create an Anonymous Volume
To create an anonymous Docker volume (a volume without a name):

# Create an anonymous Docker volume
docker volume create

# List Docker volumes
docker volume ls

# Example output might show a volume with a long ID like:
# local     a114ae62254967bb4c9933ad6fdd82a6652dd8b0933ffdb4c818e8ed1a9c13f5

# Inspect the anonymous Docker volume
docker volume inspect a114ae62254967bb4c9933ad6fdd82a6652dd8b0933ffdb4c818e8ed1a9c13f5

-------------------------------------------------------------------------------------------------------

Step 2: Create Docker Volumes Using Docker Desktop
Create a Named Volume
You can also create Docker volumes using Docker Desktop:

Open Docker Desktop.
Navigate to the Volumes tab.
Click on Create.
In the Volume Name field, enter my-volume2.
Click on Create.
Create an Anonymous Volume

To create an anonymous volume (without a name) using Docker Desktop:

Open Docker Desktop.
Navigate to the Volumes tab.
Click on Create.
Leave the Volume Name field empty.
Click on Create.



-------------------------------------------------------------------------------------------------------

Step 3: Remove Unused Docker Volumes with docker volume prune
The docker volume prune command is used to remove all unused local volumes. This is useful for cleaning up space by removing volumes that are no longer in use.

# Prune unused Docker volumes (will remove anonymous volumes not used by any container)
docker volume prune

# To confirm the action, type 'y' when prompted.

# Prune all unused Docker volumes (including named volumes not used by any container)
docker volume prune -a

# List Docker volumes to verify
docker volume ls


-------------------------------------------------------------------------------------------------------


Step 4: Remove Docker Volumes with docker volume rm
The docker volume rm command allows you to remove one or more specific volumes.

# Create a named Docker volume
docker volume create my-volume6

# Create an anonymous Docker volume
docker volume create

# List Docker volumes
docker volume ls

# Example output:
# DRIVER    VOLUME NAME
# local     my-volume6
# local     a69ef20af8869c0631b7ecc33400a56e2b56fa0cbdf9f14deed938f4c7520051

# Remove a named Docker volume
docker volume rm my-volume6

# Remove an anonymous Docker volume by specifying its ID
docker volume rm a69ef20af8869c0631b7ecc33400a56e2b56fa0cbdf9f14deed938f4c7520051

# List Docker volumes to confirm removal
docker volume ls

-------------------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------------------