Step 1: Review Docker Volume


# List Docker Volumes
docker volume ls

# Example Output:
DRIVER    VOLUME NAME
local     myvol103

-------------------------------------------------------------------------------------------------------

Step 3: Mount a Volume Subdirectory Using --mount Flag

# Single-Line Format
docker run --name volume-demo6 -p 8096:80 --mount type=volume,source=myvol103,target=/usr/share/nginx/html/app1,volume-subpath=app1 -d nginx:alpine-slim

# Readable Multi-Line Format
docker run \
    --name volume-demo6 \
    -p 8096:80 \
    --mount type=volume,source=myvol103,target=/usr/share/nginx/html/app1,volume-subpath=app1 \
    -d \
    nginx:alpine-slim

-------------------------------------------------------------------------------------------------------

Verify the Volume Mount
# List Docker Containers
docker ps
docker ps --format "table {{.Image}}\t{{.Names}}\t{{.Status}}\t{{.ID}}\t{{.Ports}}"
Example Output:

IMAGE               NAMES           STATUS         ID                  PORTS
nginx:alpine-slim   volume-demo6    Up 10 seconds   abcdef123456        0.0.0.0:8096->80/tcp

-------------------------------------------------------------------------------------------------------

Connect to Container and Verify
# Connect to the Container
docker exec -it volume-demo6 /bin/sh

# Inside the Container: Check Disk Usage
df -h | grep app1

# Navigate to the Mounted Directory
cd /usr/share/nginx/html/app1
ls

# Exit the Container Shell
exit


-------------------------------------------------------------------------------------------------------

Expected Output Inside Container:

/usr/share/nginx/html # df -h | grep app1
/dev/vda1                58.4G      3.5G     51.8G   6% /usr/share/nginx/html/app1

/usr/share/nginx/html # ls
index.html
app1/


-------------------------------------------------------------------------------------------------------


Access the Application
# Access via Browser
http://localhost:8096/app1/index.html

# Access via curl
curl http://localhost:8096/app1/index.html

-------------------------------------------------------------------------------------------------------

Expected Output:

<!DOCTYPE html> 
<html> 
  <body style='background-color:rgb(136, 209, 144);'> 
    <h1>Welcome to StackSimplify -  App1 - Volume Subdirectory "/app1"</h1> 
    <p>Learn technology through practical, real-world demos.</p> 
    <p>Application Version: V1</p>     
  </body>
</html>


-------------------------------------------------------------------------------------------------------

Inspect the Docker Container
# Inspect Docker Container
docker inspect volume-demo6

# Extract Mounts Information in JSON Format
docker inspect --format='{{json .Mounts}}' volume-demo6

# Pretty-Print Mounts Information Using jq
docker inspect --format='{{json .Mounts}}' volume-demo6 | jq


-------------------------------------------------------------------------------------------------------

Sample Output:

[
  {
    "Type": "volume",
    "Name": "myvol103",
    "Source": "/var/lib/docker/volumes/myvol103/_data",
    "Destination": "/usr/share/nginx/html/app1",
    "Driver": "local",
    "Mode": "",
    "RW": true,
    "Propagation": ""
  }
]


-------------------------------------------------------------------------------------------------------


Step 4: Clean-Up
After completing the demonstration, it's important to clean up Docker resources to free up system resources and maintain a tidy environment.

# Delete Docker Containers
docker rm -f $(docker ps -aq)

# Delete Docker Images
docker rmi $(docker images -q)

# List Docker Volumes
docker volume ls

# Observation: 
# Volumes will persist and are not deleted even after deleting containers or images

# Delete Specific Volume
docker volume remove myvol103

-------------------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------------------
