docker-compose.yaml
name: ums-stack
services:
  myumsapp:
    container_name: ums-app
    image: ghcr.io/stacksimplify/usermgmt-webapp-v6:latest
    ports:
      - "8080:8080"        
    depends_on:
      - mysql
    environment:
      - DB_HOSTNAME=mysql
      - DB_PORT=3306
      - DB_NAME=webappdb
      - DB_USERNAME=root
      - DB_PASSWORD=dbpassword11
  mysql:
    container_name: ums-mysqldb
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: dbpassword11
      MYSQL_DATABASE=webappdb
    ports:
      - "3306:3306"
    volumes:
      - mydb:/var/lib/mysql
volumes:
  mydb:

-------------------------------------------------------------------------------------------------------

Step-05: How to Start the UMS Stack
Follow the steps below to start the UMS Stack:

# Change to the project directory
cd ums-stack

# Start the UMS Stack in detached mode
docker compose up -d

-------------------------------------------------------------------------------------------------------

Step-06: Verify Services
To ensure that both the MySQL and UMS WebApp services are running:

# List running Docker containers
docker compose ps

-------------------------------------------------------------------------------------------------------

To view logs for both services:

# View logs with docker compose
docker compose logs -f <SERVICE-NAME>
docker compose logs -f mysql
docker compose logs -f myumsapp

# View logs using container names
docker logs -f <CONTAINER-NAME-OR-ID>
docker logs -f ums-mysqldb
docker logs -f ums-app


-------------------------------------------------------------------------------------------------------

Step-07: Accessing the UMS WebApp
Open your browser and navigate to http://localhost:8080.
Use the default credentials to log in:
Username: admin101
Password: password101
Once logged in, you can:
View a list of users.
Create new users.
Test the login functionality with the newly created users.


-------------------------------------------------------------------------------------------------------

Step-08: Connect to MySQL Container
To inspect or interact with the MySQL database, connect to the MySQL container:

# Connect to MySQL container
docker exec -it ums-mysqldb mysql -u root -pdbpassword11
Once inside the MySQL shell, you can run SQL queries to view the webappdb database:

mysql> show schemas;
mysql> use webappdb;
mysql> show tables;
mysql> select * from user;


-------------------------------------------------------------------------------------------------------

Step-09: Verify the Container to Container communication using Service Names using DNS
# List running Docker containers
docker compose ps

# Connect to ums-app container
docker exec -it ums-app /bin/bash

# Test DNS - myumsapp
nslookup <SERVICE-NAME>
nslookup myumsapp
dig myumsapp

# Test DNS - mysql
nslookup <SERVICE-NAME>
nslookup mysql
dig mysql


-------------------------------------------------------------------------------------------------------

Step-10: Stop and Clean Up
When you're done, stop and remove the running containers:

# Stop and remove the containers
docker compose down
To remove the MySQL volume as well (optional):

# Stop containers and remove volumes
docker compose down -v

# List Docker volumes to confirm removal
docker volume ls


-------------------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------------------